{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/agnes/Documents/Jonglistiquement/jonglistiquement/src/components/Forms/PostForm/DisplayAllPosts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport CreateNewPost from './CreateNewPost';\nimport Post from './Post';\n\nconst DisplayAllPosts = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [allPost, setAllPost] = useState([]);\n  const [isCreateNewPost, setIsCreateNewPost] = useState(false);\n  const getTitle = useRef();\n  const getContent = useRef();\n\n  const savePostTitleToSet = event => {\n    setTitle(event.target.value);\n    console.log(title);\n  };\n\n  const savePostContentToSet = event => {\n    setContent(event.target.value);\n    console.log(content);\n  };\n\n  const toggleCreateNewPost = () => {\n    setIsCreateNewPost(!isCreateNewPost);\n  };\n\n  const savePost = event => {\n    event.preventDefault();\n    const id = Date.now();\n    setAllPost([...allPost, {\n      title,\n      content,\n      id\n    }]);\n    console.log(allPost);\n    getTitle.current.value = \"\";\n    getContent.current.value = \"\";\n    toggleCreateNewPost();\n  };\n\n  if (isCreateNewPost) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CreateNewPost, {\n        savePostTitleToSet: savePostTitleToSet,\n        savePostContentToSet: savePostContentToSet,\n        getTitle: getTitle,\n        getContent: getContent,\n        savePost: savePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), !allPost.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"nothing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this) : allPost.map(eachPost => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        id: eachPost,\n        title: eachPost.title,\n        content: eachPost.content\n      }, eachPost.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCreateNewPost,\n      children: \"Create New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DisplayAllPosts, \"39CIjU32AME+liNrsQxExUZXrNM=\");\n\n_c = DisplayAllPosts;\nexport default DisplayAllPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayAllPosts\");","map":{"version":3,"sources":["/Users/agnes/Documents/Jonglistiquement/jonglistiquement/src/components/Forms/PostForm/DisplayAllPosts.jsx"],"names":["React","useState","useRef","CreateNewPost","Post","DisplayAllPosts","title","setTitle","content","setContent","allPost","setAllPost","isCreateNewPost","setIsCreateNewPost","getTitle","getContent","savePostTitleToSet","event","target","value","console","log","savePostContentToSet","toggleCreateNewPost","savePost","preventDefault","id","Date","now","current","length","map","eachPost"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react'\nimport CreateNewPost from './CreateNewPost'\nimport Post from './Post'\n\nconst DisplayAllPosts = () => {\n  const [title, setTitle] = useState(\"\")\n  const [content, setContent] = useState(\"\")\n  const [allPost, setAllPost] = useState([])\n  const [isCreateNewPost, setIsCreateNewPost] = useState(false)\n  const getTitle = useRef()\n  const getContent = useRef()\n\n  const savePostTitleToSet = event => {\n    setTitle(event.target.value)\n    console.log(title)\n  }\n\n  const savePostContentToSet = event => {\n    setContent(event.target.value)\n    console.log(content)\n  }\n\n  const toggleCreateNewPost = () => {\n    setIsCreateNewPost(!isCreateNewPost)\n  }\n\n  const savePost = (event) => {\n    event.preventDefault()\n    const id = Date.now()\n    setAllPost([...allPost, {title, content, id}])\n    console.log(allPost)\n    getTitle.current.value=\"\";\n    getContent.current.value=\"\"\n    toggleCreateNewPost()\n  }\n\n  if(isCreateNewPost) {\n    return (\n      <>\n      <CreateNewPost\n      savePostTitleToSet = {savePostTitleToSet}\n      savePostContentToSet = {savePostContentToSet} \n      getTitle={getTitle}\n      getContent={getContent}\n      savePost={savePost}\n      />\n      </>\n    )\n  }\n  return (\n    <>\n    <h2>All Posts</h2>\n    {!allPost.length ? (\n      <div>\n        <h3>nothing</h3>\n      </div>\n    ) : (\n      allPost.map(eachPost => {\n        return (\n          <Post \n            id={eachPost}\n            key={eachPost.id}\n            title={eachPost.title}\n            content={eachPost.content}\n          />\n        )\n      })\n    )}\n\n    <br />\n    <br />\n    <button onClick={toggleCreateNewPost}>Create New</button>\n\n    </>\n  )\n}\n\nexport default DisplayAllPosts"]},"metadata":{},"sourceType":"module"}